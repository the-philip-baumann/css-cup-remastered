CREATE TABLE public.rolle
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT rolle_pkey PRIMARY KEY (id)
);

CREATE TABLE public.discipline
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT discipline_pkey PRIMARY KEY (id)
);

CREATE TABLE public.team
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    team_discipline_id bigint,
    CONSTRAINT team_pkey PRIMARY KEY (id),
    CONSTRAINT fknax39c8v433mhak5liy0fqxd8 FOREIGN KEY (team_discipline_id)
        REFERENCES public.discipline (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.player
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    firstname character varying(255) COLLATE pg_catalog."default" NOT NULL,
    function character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lastname character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password bytea,
    player_discipline_id bigint,
    player_role_id bigint,
    player_team_id bigint,
    CONSTRAINT player_pkey PRIMARY KEY (id),
    CONSTRAINT fk1st34erb4epwshpsdc7l91elx FOREIGN KEY (player_team_id)
        REFERENCES public.team (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk4qfv0f9p44wc3g129ome4hg1c FOREIGN KEY (player_role_id)
        REFERENCES public.rolle (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkagjq6u83b4jfv5oy8ov26d8px FOREIGN KEY (player_discipline_id)
        REFERENCES public.discipline (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

--
--
-- CREATE TABLE discipline
-- (
--     id   SERIAL      NOT NULL PRIMARY KEY,
--     name VARCHAR(50) NOT NULL
-- );
--
-- CREATE TABLE player
-- (
--     id         SERIAL       NOT NULL PRIMARY KEY,
--     firstname  VARCHAR(50)  NOT NULL,
--     lastname   VARCHAR(50)  NOT NULL,
--     function   VARCHAR(50)  NOT NULL,
--     email      VARCHAR(100) NOT NULL,
--     password   bytea        NOT NULL,
--     rolle       INT         NOT NULL,
--     discipline INT          NOT NULL,
--     FOREIGN KEY (id) REFERENCES rolle(id),
--     FOREIGN KEY (id) REFERENCES discipline(id)
-- );
--
--
--
-- CREATE TABLE team
-- (
--     id         SERIAL      NOT NULL PRIMARY KEY,
--     name       VARCHAR(50) NOT NULL,
--     discipline INT         NOT NULL,
--     captain    INT         NOT NULL,
--     FOREIGN KEY (discipline) REFERENCES discipline (id),
--     FOREIGN KEY (captain) REFERENCES player(id)
-- );
--
--
--
INSERT INTO discipline (name)
VALUES ('FOOTBALL'),
       ('VOLLEYBALL'),
       ('UNDECIDED');

INSERT INTO rolle (name) VALUES ('ADMIN'), ('CAPTAIN'), ('PARTICIPANT'), ('UNDECIDED');

INSERT INTO team (name, team_discipline_id)
VALUES ('SCK', 1);

INSERT INTO player (firstname, lastname, function, email, password, player_role_id, player_team_id, player_discipline_id)
VALUES ('Philip', 'Baumann', 'IEL', 'philip.baumann@css.ch', '', 1, 1, 1);
